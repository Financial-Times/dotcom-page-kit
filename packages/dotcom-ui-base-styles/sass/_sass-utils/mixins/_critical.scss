////
/// @group n-ui critical mixins
////

/// Critical block
/// @output Wraps the block with critical start and end comments
@mixin nUiCritical($feature-name: null) {
	@include nUiCriticalStart($feature-name);
	@content;
	@include nUiCriticalEnd($feature-name);
}


/// Test whether a feature is part of the core of n-ui
/// @param {String} $feature
/// @returns {Bool}
@function nUiFeatureIsCore($feature-name) {
	@return $feature-name == 'core';
}

@function nUiGetHeadCssVariant ($feature-name) {
	$variant: "";
	@if $n-ui-variant {
		$variant: "-#{$n-ui-variant}";
	}
	@if nUiFeatureIsCore($feature-name) {
		$variant: "#{$variant}-n-ui-core";
	}
	@return $variant
}


/// Critical block start
/// @output A critical block start comment
@mixin nUiCriticalStart($feature-name: null) {
	@if $n-ui-output-critical and ($feature-name == 'core' or if($feature-name, nUiFeatureValue($feature-name) == 'critical', true)) {
		/*! start:head#{nUiGetHeadCssVariant($feature-name)}.css*/
	}
}

/// Critical block end
/// @output A critical block start comment
@mixin nUiCriticalEnd($feature-name: null) {
	@if $n-ui-output-critical and ($feature-name == 'core' or if($feature-name, nUiFeatureValue($feature-name) == 'critical', true)) {
		/*! end:head#{nUiGetHeadCssVariant($feature-name)}.css*/
	}
}

@mixin nUiMaybeCriticalStart($feature-name: null) {
	@include nUiCriticalStart($feature-name);
}

@mixin nUiMaybeCriticalEnd($feature-name: null) {
	@include nUiCriticalEnd($feature-name);
}

@mixin nUiMaybeCritical($feature-name: null) {
	@include nUiCriticalStart($feature-name);
	@content;
	@include nUiCriticalEnd($feature-name);
}
