version: 2.1

orbs:
  node: circleci/node@6.3.0

executors:
  node:
    docker:
      - image: cimg/node:22.12-browsers
        environment:
          NODE_OPTIONS: "--openssl-legacy-provider"
  node20:
    docker:
      - image: cimg/node:20.18-browsers
        environment:
          NODE_OPTIONS: '--openssl-legacy-provider'
  node18:
    docker:
      - image: cimg/node:18.20-browsers

references:
  #
  # Workspace
  #
  container_config_node: &container_config_node
    working_directory: ~/project/build
    parameters:
      executor:
        default: node
        type: executor
    executor: << parameters.executor >>

  workspace_root: &workspace_root ~/project

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  # Filters
  #
  filters_only_main: &filters_only_main
    branches:
      only:
        - main

  filters_main_branch: &filters_main_branch
    branches:
      only:
        - main

  filters_release_build: &filters_release_build
    tags:
      only:
        - /^v\d+\.\d+\.\d+$/
    branches:
      ignore: /.*/

  filters_prerelease_build: &filters_prerelease_build
    tags:
      only:
        - /^v\d+\.\d+\.\d+(?:-\w+\.\d+)$/
    branches:
      ignore: /.*/

jobs:
  checkout:
    <<: *container_config_node
    steps:
      - checkout
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build
  setup:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - node/install-packages
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build
  build:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Run build
          command: npm run build
      - run:
          name: Run build in examples/
          command: npm run build:examples
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  test:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Install Chrome
          command: npx puppeteer browsers install chrome
      - run:
          name: Check code style
          command: npm run prettier -- --list-different
      - run:
          name: Run package tests
          command: npm run test:ci
      - run:
          name: Run example app integration tests
          command: npm run test:examples-ci
      - run:
          name: Run storybook
          command: npm run storybook:ci

  publish:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Set npm auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >
            ${HOME}/.npmrc
      - run:
          name: Bump version
          command: npx athloi version ${CIRCLE_TAG} --filter "dotcom-*"
      - run:
          name: NPM publish
          command: npm publish --workspace=packages/ --access=public --tag=latest

  prepublish:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Set npm auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >
            ${HOME}/.npmrc
      - run:
          name: Bump version
          command: npx athloi version ${CIRCLE_TAG} --filter "dotcom-*"
      - run:
          name: NPM publish
          command: npm publish --workspace=packages/ --access=public --tag=pre-release

  deploy:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Deploy Storybook
          command: npm run deploy-storybook:ci

workflows:
  version: 2

  build-test:
    jobs:
      - checkout
      - setup:
          name: setup-<< matrix.executor >>
          requires:
            - checkout
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - build:
          name: build-<< matrix.executor >>
          requires:
            - setup-<< matrix.executor >>
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - test:
          requires:
            - build-<< matrix.executor >>
          name: test-<< matrix.executor >>
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - deploy:
          filters:
            <<: *filters_only_main
          requires:
            - test-node

  build-test-publish:
    jobs:
      - checkout:
          filters:
            <<: *filters_release_build
      - setup:
          filters:
            <<: *filters_release_build
          name: setup-<< matrix.executor >>
          requires:
            - checkout
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - build:
          filters:
            <<: *filters_release_build
          name: build-<< matrix.executor >>
          requires:
            - setup-<< matrix.executor >>
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - test:
          filters:
            <<: *filters_release_build
          requires:
            - build-<< matrix.executor >>
          name: test-<< matrix.executor >>
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - publish:
          context: npm-publish-token
          filters:
            <<: *filters_release_build
          requires:
            - test-node

  build-test-prepublish:
    jobs:
      - checkout:
          filters:
            <<: *filters_prerelease_build
      - setup:
          filters:
            <<: *filters_prerelease_build
          name: setup-<< matrix.executor >>
          requires:
            - checkout
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - build:
          filters:
            <<: *filters_prerelease_build
          name: build-<< matrix.executor >>
          requires:
            - setup-<< matrix.executor >>
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - test:
          filters:
            <<: *filters_prerelease_build
          requires:
            - build-<< matrix.executor >>
          name: test-<< matrix.executor >>
          matrix:
            parameters:
              executor:
                - node
                - node20
                - node18
      - prepublish:
          context: npm-publish-token
          filters:
            <<: *filters_prerelease_build
          requires:
            - test-node
